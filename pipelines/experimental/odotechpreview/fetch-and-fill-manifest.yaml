#Kabanero! on activate substitute Digest for text '@Digest@'
apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: fetch-and-fill-manifest-@Digest@
spec:
  workspaces:
    - name: source
      mountPath: /source
  params:
    - name: devfilePath
      default: repo/devfile.yaml
    - name: manifestSubPath
      default: manifest.yaml
    - name: newImage
      type: string
  steps:
    - name: fetch-manifest
      image: icp4apps/pipelines-utils:latest
      script: |
        MANIFEST_PATH="$(workspaces.source.path)/$(params.manifestSubPath)"
        DEVFILE="$(workspaces.source.path)/devfile.yaml"
        LOCAL_DEVFILE="$(workspaces.source.path)/$(params.devfilePath)"

        yq -r . ${DEVFILE}

        # Fetch deployment manifest from stack devfile
        LOOKUP='.metadata."alpha.deployment-manifest"'
        MANIFEST_URL=$(yq -r $LOOKUP $DEVFILE)
        wget -O $MANIFEST_PATH $MANIFEST_URL
        cat ${MANIFEST_PATH}

        # Replace image in deployment manifest
        sed -i "s|{{.CONTAINER_IMAGE}}|$(params.newImage)|" $MANIFEST_PATH

        yq -r . ${LOCAL_DEVFILE}

        # Replace component name, based on local devfile.yaml
        COMPONENT_NAME=$(yq -r '.components[0].container.name' $LOCAL_DEVFILE)
        sed -i "s/{{.COMPONENT_NAME}}/${COMPONENT_NAME}/" $MANIFEST_PATH

        # Replace port used by application, based on devfile.yaml
        LOOKUP='.components[0].container.endpoints[0].targetPort'
        PORT=$(yq -r $LOOKUP $LOCAL_DEVFILE)
        sed -i "s/{{.PORT}}/${PORT}/" $MANIFEST_PATH

        cat ${MANIFEST_PATH}
