#Kabanero! on activate substitute Digest for text '@Digest@'
# From https://raw.githubusercontent.com/tektoncd/catalog/v1beta1/buildah/buildah.yaml
apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: buildah-@Digest@
spec:
  params:
  - name: IMAGE
    description: Reference of the image buildah will produce.
  - name: BUILDER_IMAGE
    description: The location of the buildah builder image.
    default: icp4apps/pipelines-utils:latest
  - name: STORAGE_DRIVER
    description: Set buildah storage driver
    default: overlay
  - name: DOCKERFILE
    description: Path to the Dockerfile to build.
    default: ./Dockerfile
  - name: CONTEXT
    description: Path to the directory to use as context.
    default: .
  - name: TLSVERIFY
    description: Verify the TLS on the registry endpoint (for push/pull to a non-TLS registry)
    default: "true"
  - name: FORMAT
    description: The format of the built container, oci or docker
    default: "oci"
  workspaces:
  - name: source

  results:
  - name: IMAGE_DIGEST
    description: Digest of the image just built.

  steps:
  - name: build
    image: $(params.BUILDER_IMAGE)
    workingDir: $(workspaces.source.path)
    command: ["/bin/bash"]
    args:
      - -c
      - |
        # Configure image registry access in the container by adding it to the insecure registry list or enabling TLS verification
        # by adding it to the trust store based on OpenShift cluster resource configuration.
        echo "[INFO] Running the script /scripts/image_registry_access_setup.sh ...."
        /scripts/image_registry_access_setup.sh
        retVal=$?
        if [ $retVal -ne 0 ]
        then
           echo "[ERROR] The script failed(/scripts/image_registry_access_setup.sh)" >&2
           exit $retVal
        fi
        echo "[INFO] Completed setup for image registry access."

        # Docker does not support upper case characters in the image name.  Github does not have this restriction.
        # So lowercase the image name if it has any upper case characters.
        DOCKER_IMAGE_URL_LOWERCASE=$( /scripts/imageurl_imagename_lowercase.sh -u "$(params.IMAGE)" )
        retVal=$?
        if [ $retVal -ne 0 ]
        then
           echo "[ERROR] The script failed(/scripts/imageurl_imagename_lowercase.sh) Reason: $DOCKER_IMAGE_URL_LOWERCASE" >&2
           exit $retVal
        fi
        echo "[INFO] Application image URL = $DOCKER_IMAGE_URL_LOWERCASE"

        buildah --storage-driver=$(params.STORAGE_DRIVER) bud --format=$(params.FORMAT) --no-cache -f $(params.DOCKERFILE) -t ${DOCKER_IMAGE_URL_LOWERCASE} $(params.CONTEXT)

    volumeMounts:
    - name: varlibcontainers
      mountPath: /var/lib/containers
    securityContext:
      privileged: true

  - name: push
    image: $(params.BUILDER_IMAGE)
    workingDir: $(workspaces.source.path)
    command: ["/bin/bash"]
    args:
      - -c
      - |
        # Configure image registry access in the container by adding it to the insecure registry list or enabling TLS verification
        # by adding it to the trust store based on OpenShift cluster resource configuration.
        echo "[INFO] Running the script /scripts/image_registry_access_setup.sh ...."
        /scripts/image_registry_access_setup.sh
        retVal=$?
        if [ $retVal -ne 0 ]
        then
           echo "[ERROR] The script failed(/scripts/image_registry_access_setup.sh)" >&2
           exit $retVal
        fi
        echo "[INFO] Completed setup for image registry access."

        # Docker does not support upper case characters in the image name.  Github does not have this restriction.
        # So lowercase the image name if it has any upper case characters.
        DOCKER_IMAGE_URL_LOWERCASE=$( /scripts/imageurl_imagename_lowercase.sh -u "$(params.IMAGE)" )
        retVal=$?
        if [ $retVal -ne 0 ]
        then
           echo "[ERROR] The script failed(/scripts/imageurl_imagename_lowercase.sh) Reason: $DOCKER_IMAGE_URL_LOWERCASE" >&2
           exit $retVal
        fi
        echo "[INFO] Application image URL = $DOCKER_IMAGE_URL_LOWERCASE"

        buildah --storage-driver=$(params.STORAGE_DRIVER) push --digestfile $(workspaces.source.path)/image-digest ${DOCKER_IMAGE_URL_LOWERCASE} docker://${DOCKER_IMAGE_URL_LOWERCASE}

    volumeMounts:
    - name: varlibcontainers
      mountPath: /var/lib/containers
    securityContext:
      privileged: true

  - name: digest-to-results
    image: $(params.BUILDER_IMAGE)
    script: cat $(workspaces.source.path)/image-digest | tee /tekton/results/IMAGE_DIGEST

  volumes:
  - name: varlibcontainers
    emptyDir: {}
